{"version":3,"sources":["components/AppNavbar.js","components/ShoppingList.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","_this","setState","react_default","a","createElement","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","React","Component","ShoppingList","items","currentItem","disabled","getDataFromDb","fetch","then","data","json","res","postDataToDb","name","currentIds","map","id","idToBeAdded","includes","temp","push","axios","post","catch","err","console","log","index","findIndex","e","splice","deleteData","itemsData","delete","handleSubmit","preventDefault","document","getElementById","value","_this2","style","margin","InputGroup","Input","placeholder","autoFocus","onChange","target","InputGroupAddon","addonType","Button","type","marginBottom","outline","boxShadow","ListGroup","TransitionGroup","_ref","CSSTransition","key","timeout","classNames","ListGroupItem","size","App","AppNavbar_AppNavbar","ShoppingList_ShoppingList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2TAWqBA,6MACpBC,MAAM,CACLC,QAAO,KAERC,OAAO,WACNC,EAAKC,SAAS,CACbH,QAAQE,EAAKH,MAAMC,kFAKrB,OACAI,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAKC,UAAU,QAC/CP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAaC,KAAK,KAAlB,iBACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAeC,QAASC,KAAKhB,SAC5BG,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUlB,OAAQiB,KAAKlB,MAAMC,OAAQmB,QAAM,GAC1Cf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAKT,UAAU,UAAUJ,QAAM,GAC9BH,EAAAC,EAAAC,cAACe,EAAA,EAAD,kBAnBiCC,IAAMC,4FCLxBC,oNACpBzB,MAAQ,CACP0B,MAAO,GAEPC,YAAa,GACbC,UAAU,KAmBXC,cAAgB,WACfC,MAAM,QACJC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAAS/B,EAAKC,SAAS,CAAEsB,MAAOQ,EAAIF,QACzC7B,EAAKC,SAAS,CAAEwB,UAAU,QAG7BO,aAAe,SAACC,GAGf,IAFA,IAAIC,EAAalC,EAAKH,MAAM0B,MAAMY,IAAI,SAAAZ,GAAK,OAAIA,EAAMa,KACjDC,EAAc,EACXH,EAAWI,SAASD,MACxBA,EAGH,IAAIE,EAAOvC,EAAKH,MAAM0B,MACtBgB,EAAKC,KAAK,CAACJ,GAAGC,EAAaJ,KAAKA,IAChCjC,EAAKC,SAAS,CAACsB,MAAMgB,IAErBE,IAAMC,KAAK,IAAiC,CAC3CN,GAAIC,EACJJ,KAAMA,IAELL,KAAK,WACL5B,EAAKC,SAAS,CAAEwB,UAAU,MAE1BkB,MAAM,SAAAC,GACNC,QAAQC,IAAIF,GACZ,IAAIL,EAAOvC,EAAKH,MAAM0B,MAClBwB,EAAQR,EAAKS,UAAU,SAAAC,GAAC,OAAEA,EAAEb,KAAKC,IACrCE,EAAKW,OAAOH,EAAM,GAClB/C,EAAKC,SAAS,CAACsB,MAAMgB,SAIxBY,WAAa,SAACf,GACb,IAAIgB,EAAYpD,EAAKH,MAAM0B,MACvBgB,EAAOa,EACPL,EAAQR,EAAKS,UAAU,SAAAC,GAAC,OAAEA,EAAEb,KAAKA,IACrCG,EAAKW,OAAOH,EAAM,GAClB/C,EAAKC,SAAS,CAACsB,MAAMgB,IAErBE,IAAMY,OAAO,IAAiC,CAC7CxB,KAAM,CACLO,GAAIA,KAGJR,KAAK,cAGLe,MAAM,SAAAC,GACNC,QAAQC,IAAIF,GACZ5C,EAAKC,SAAS,CAACsB,MAAM6B,SAIxBE,aAAe,SAACL,GACfA,EAAEM,iBAE0C,KAAzCC,SAASC,eAAe,SAASC,QAGpC1D,EAAKgC,aAAahC,EAAKH,MAAM2B,aAC7BgC,SAASC,eAAe,SAASC,MAAQ,GACzC1D,EAAKC,SAAS,CAAEwB,UAAU,IAC1BzB,EAAKC,SAAS,CAAEuB,YAAY,0FA9E5BT,KAAKW,iGAiFG,IAAAiC,EAAA5C,KACAQ,EAAUR,KAAKlB,MAAf0B,MAER,GAAIA,EACH,OACCrB,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACCR,EAAAC,EAAAC,cAAA,OAAKwD,MAAO,CAAEC,OAAQ,sBACrB3D,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACC5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAO3B,GAAG,QAAQ4B,YAAY,0BAA0BC,WAAS,EAACC,SAAU,SAACjB,GAAQU,EAAK1D,SAAS,CAAEuB,YAAayB,EAAEkB,OAAOT,WAC3HxD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAiBC,UAAU,UAC1BnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACC7C,SAAUV,KAAKlB,MAAM4B,SACrB8C,KAAK,SACLjE,MAAM,OACNsD,MAAO,CAAEY,aAAc,OAASC,QAAS,OAAQC,UAAW,QAC5D5D,QAASC,KAAKuC,cALf,gBAcJpD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAWlE,UAAU,QACpBP,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAiBnE,UAAU,iBACzBc,EAAMY,IAAI,SAAA0C,GAAA,IAAGzC,EAAHyC,EAAGzC,GAAIH,EAAP4C,EAAO5C,KAAP,OACV/B,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAeC,IAAK3C,EAAI4C,QAAS,EAAGC,WAAW,QAC9C/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAezE,UAAU,WACxBP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACC7D,UAAU,aACVH,MAAM,SACN6E,KAAK,KACLrE,QAAS,kBAAM6C,EAAKR,WAAWf,KAJhC,QAQCH,gBAjI+Bb,IAAMC,kBCSjC+D,MATf,WACE,OACElF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACfP,EAAAC,EAAAC,cAACiF,EAAD,MACAnF,EAAAC,EAAAC,cAACkF,EAAD,QCEgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAAStC,SAASC,eAAe,SD4H3C,kBAAmBsC,WACrBA,UAAUC,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.4702d920.chunk.js","sourcesContent":["import React from 'react';\r\nimport{\r\n\tCollapse,\r\n\tNavbar,\r\n\tNavbarToggler,\r\n\tNavbarBrand,\r\n\tNav,\r\n\tNavItem,\r\n\tContainer\r\n} from 'reactstrap';\r\n\r\nexport default class AppNavbar extends React.Component{\r\n\tstate={\r\n\t\tisOpen:false\r\n\t}\r\n\ttoggle=()=>{\r\n\t\tthis.setState({\r\n\t\t\tisOpen:!this.state.isOpen\r\n\t\t});\r\n\t}\r\n\r\nrender(){\r\n\treturn(\r\n\t<div>\r\n\t\t<Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n\t\t\t<Container>\r\n\t\t\t<NavbarBrand href=\"/\">Shopping List</NavbarBrand>\r\n\t\t\t<NavbarToggler onClick={this.toggle}/>\r\n\t\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\r\n\t\t\t\t\t<Nav className=\"ml-auto\" Navbar>\r\n\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t{/* <NavLink href=\"https://github.com/kumarshubu\">GitHub</NavLink> */}\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t</div>\r\n\t);\r\n}\r\n}","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\r\nimport './List.css';\r\nexport default class ShoppingList extends React.Component {\r\n\tstate = {\r\n\t\titems: [\r\n\t\t],\r\n\t\tcurrentItem: \"\",\r\n\t\tdisabled: false,\r\n\t\t// intervalIsSet: null\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getDataFromDb();\r\n\t\t// if (!this.state.intervalIsSet) {\r\n\t\t// \tlet interval = setInterval(this.getDataFromDb, 1000);\r\n\t\t// \tthis.setState({ intervalIsSet: interval });\r\n\t\t// }\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\t// if (this.state.intervalIsSet) {\r\n\t\t// \tclearInterval(this.state.intervalIsSet);\r\n\t\t// \tthis.setState({ intervalIsSet: null });\r\n\t\t// }\r\n\t}\r\n\r\n\tgetDataFromDb = () => {\r\n\t\tfetch(\"/get\" || \"http://localhost:5000/get\")\r\n\t\t\t.then(data => data.json())\r\n\t\t\t.then(res => { this.setState({ items: res.data }) },\r\n\t\t\t\tthis.setState({ disabled: false }));\r\n\t};\r\n\r\n\tpostDataToDb = (name) => {\r\n\t\tlet currentIds = this.state.items.map(items => items.id);\r\n\t\tlet idToBeAdded = 0;\r\n\t\twhile (currentIds.includes(idToBeAdded)) {\r\n\t\t\t++idToBeAdded;\r\n\t\t}\r\n\t\t\r\n\t\tlet temp = this.state.items;\r\n\t\ttemp.push({id:idToBeAdded, name:name});\r\n\t\tthis.setState({items:temp});\r\n\t\t\r\n\t\taxios.post(\"/\" || \"http://localhost:5000/\", {\r\n\t\t\tid: idToBeAdded,\r\n\t\t\tname: name\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ disabled: false })\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tlet temp = this.state.items;\r\n\t\t\t\tlet index = temp.findIndex(e=>e.id===idToBeAdded);\r\n\t\t\t\ttemp.splice(index,1);\r\n\t\t\t\tthis.setState({items:temp});\r\n\t\t\t})\r\n\t};\r\n\r\n\tdeleteData = (id) => {\r\n\t\tlet itemsData = this.state.items;\r\n\t\tlet temp = itemsData;\r\n\t\tlet index = temp.findIndex(e=>e.id===id);\r\n\t\ttemp.splice(index,1);\r\n\t\tthis.setState({items:temp});\r\n\t\t\r\n\t\taxios.delete(\"/\" || \"http://localhost:5000/\", {\r\n\t\t\tdata: {\r\n\t\t\t\tid: id\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(() => { \r\n\t\t\t\t//do nothing\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.setState({items:itemsData});\r\n\t\t\t})\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif(document.getElementById(\"input\").value===\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.postDataToDb(this.state.currentItem)\r\n\t\tdocument.getElementById(\"input\").value = \"\"\r\n\t\tthis.setState({ disabled: true })\r\n\t\tthis.setState({ currentItem:\"\"})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { items } = this.state;\r\n\t\t//to check if DB ==null\t\t\r\n\t\tif (items)\r\n\t\t\treturn (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div style={{ margin: \"10px 0px 10px 0px\" }}>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<Input id=\"input\" placeholder=\"type your items here...\" autoFocus onChange={(e) => { this.setState({ currentItem: e.target.value }) }} />\r\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"append\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.disabled}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"dark\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '2rem',  outline: \"none\", boxShadow: \"none\" }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAdd Item\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ListGroup className=\"list\">\r\n\t\t\t\t\t\t<TransitionGroup className=\"shopping-list\">\r\n\t\t\t\t\t\t\t{items.map(({ id, name }) => (\r\n\t\t\t\t\t\t\t\t<CSSTransition key={id} timeout={0} classNames=\"fade\">\r\n\t\t\t\t\t\t\t\t\t<ListGroupItem className=\"subList\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.deleteData(id)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Container>\r\n\t\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AppNavbar from './components/AppNavbar'\r\nimport ShoppingList from './components/ShoppingList'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <AppNavbar/>\r\n    <ShoppingList/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}