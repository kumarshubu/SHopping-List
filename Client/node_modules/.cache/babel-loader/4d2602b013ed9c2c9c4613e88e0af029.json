{"ast":null,"code":"var _jsxFileName = \"/media/shubham/Shubham/CODEASYLUMS/MY PROJECTS/shopping_list/client/src/components/ShoppingList.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\nexport default class ShoppingList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.getDataFromDb = () => {\n      fetch(\"http://localhost:5000/get\").then(data => data.json()).then(res => this.setState({\n        items: res.data\n      }));\n    };\n\n    this.postDataToDb = name => {\n      let currentIds = this.state.items.map(items => items.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:5000/post\", {\n        id: idToBeAdded,\n        name: name\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 2000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          id = _this$state.id;\n\n    for (let i = 0; i < items.length; i++) return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        const name = prompt('Enter Item');\n\n        if (name) {\n          this.postDataToDb(name);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Add Item\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, items.map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          items: state.items.filter(item => item.id !== id)\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\xD7\"), name))))));\n  }\n\n}","map":{"version":3,"sources":["/media/shubham/Shubham/CODEASYLUMS/MY PROJECTS/shopping_list/client/src/components/ShoppingList.js"],"names":["React","axios","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","ShoppingList","Component","state","items","getDataFromDb","fetch","then","data","json","res","setState","postDataToDb","name","currentIds","map","id","idToBeAdded","includes","post","componentDidMount","intervalIsSet","interval","setInterval","componentWillUnmount","clearInterval","render","i","length","marginBottom","prompt","filter","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport {Container, ListGroup,ListGroupItem,Button} from 'reactstrap';\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\nimport uuid from 'uuid';\nexport default class ShoppingList extends React.Component{\n\tstate={\n\t\titems:[]\n\t}\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 2000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\t\n\n    componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  getDataFromDb = () => {\n    fetch(\"http://localhost:5000/get\")\n      .then(data => data.json())\n      .then(res => this.setState({ items: res.data }));\n  };\n\n  postDataToDb =(name)=>{\n  \t      let currentIds=this.state.items.map(items=>items.id);\n      let idToBeAdded=0;\n      while(currentIds.includes(idToBeAdded)){\n        ++idToBeAdded;\n      }\n  \taxios.post(\"http://localhost:5000/post\",{\n  \t\tid:idToBeAdded,\n  \t\tname:name\n  \t});\n  };\n  \n\trender(){\n\t\tconst { items,id } = this.state;\n\t\tfor(let i=0;i<items.length;i++)\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<Button\n\t\t\t\tcolor=\"dark\"\n\t\t\t\tstyle={{marginBottom:'2rem'}}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tconst name = prompt('Enter Item');\n\t\t\t\t\tif(name){\n\t\t\t\t\t\tthis.postDataToDb(name);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\tAdd Item\n\t\t\t\t</Button>\n\n\t\t\t\t<ListGroup>\n\t\t\t\t\t<TransitionGroup className=\"shopping-list\">\n\t\t\t\t\t{items.map(({id,name})=>(\n\t\t\t\t\t\t<CSSTransition key={id} timeout={500} classNames=\"fade\">\n\t\t\t\t\t<ListGroupItem>\n\t\t\t\t\t<Button\n\t\t\t\t\tclassName=\"remove-btn\"\n\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\tthis.setState(state=>({\n\t\t\t\t\t\t\titems:state.items.filter(item=>item.id!==id)\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t&times;\n\t\t\t\t\t</Button>\n\t\t\t\t\t{name}\n\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t))} \n\t\t\t\t\t</TransitionGroup>\n\t\t\t\t</ListGroup>\n\t\t\t</Container>\n\t\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}